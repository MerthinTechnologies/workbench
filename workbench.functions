get_git_branch() {
    local issue_id=$1
    local api_url='https://api.linear.app/graphql'
    local auth_token=$2

    local json_payload=$(cat <<EOF
{
  "query": "query GetGitBranch(\$issueId: String!) {\\n  issue(id: \$issueId) {\\n    branchName\\n  }\\n}",
  "variables": {
    "issueId": "${issue_id}"
  }
}
EOF
    )

    curl -s --location "${api_url}" \
         --header "Authorization: ${auth_token}" \
         --header 'Content-Type: application/json' \
         --data "${json_payload}" | jq ".data.issue.branchName" | tr -d '"'
}

get_viewer_todo_issues() {
    local auth_token=$1
    local api_url='https://api.linear.app/graphql'

    local json_payload=$(cat <<EOF
{
  "query": "query GetViewerTodoIssues {\\n  viewer {\\n    assignedIssues(filter: { state: { name: { eq: \\"Todo\\" } } }) {\\n      nodes {\\n        id\\n        identifier\\n        title\\n        state {\\n          name\\n        }\\n        description\\n      }\\n    }\\n  }\\n}"
}
EOF
    )

    curl -s --location "${api_url}" \
         --header "Authorization: ${auth_token}" \
         --header 'Content-Type: application/json' \
         --data "${json_payload}" | jq '.data.viewer.assignedIssues.nodes[] | {id: .id, visualID: .identifier, title: .title, state: .state.name, description: .description}'
}